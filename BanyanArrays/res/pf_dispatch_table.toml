[splits.ReadBlockJuliaArray]
expected = [ "key" ]
partition_memory_usage = "part"
scale_by = 3
views = false
required = { name = "Distributing", distribution = "blocked", id = "!" }
locations = [ { name = "Disk", datatype = "Array" } ]

[splits.ReadGroupJuliaArray]
expected = [ "key", "divisions" ]
partition_memory_usage = "part"
scale_by = 9
views = false
required = { name = "Distributing", distribution = "grouped", id = "!" }
default = { rev = false }
locations = [ { name = "Disk", datatype = "Array" } ]

[splits.CopyFromJuliaArray]
partition_memory_usage = "all"
scale_by = 2
views = false
required = { name = "Replicating", dividing = false }
locations = [ { name = "Disk", datatype = "Array" } ]

[merges.WriteJuliaArray]
partition_memory_usage = "part"
scale_by = 1
views = false
required = { name = "Distributing" }
locations = [ { name = "Disk", datatype = "Array" } ]

[merges.CopyToJuliaArray]
partition_memory_usage = "all"
scale_by = 1
views = false
required = { name = "Replicating", replication = "all" }
locations = [ { name = "Disk", datatype = "Array" } ]

[casts.ConsolidateArray]
src_expected = [ "key" ]
scale_by_src = 1
scale_by_dst = 3
src_required = { name = "Distributing" }
dst_required = { name = "Replicating", replication = "all" }
locations = [ { datatype = "Array" } ]

[casts.RebalanceArray]
scale_by_src = 1
scale_by_dst = 3
src_required = { name = "Distributing" }
dst_required = { name = "Distributing", distribution = "blocked", balanced = true, id = "!" }
locations = [ { datatype = "Array" } ]

[casts.ShuffleArray]
dst_expected = [ "key", "divisions" ]
scale_by_src = 3
scale_by_dst = 3
src_required = { name = "Distributing" }
dst_required = { name = "Distributing", distribution = "grouped", id = "!" }
dst_default = { rev = false }
locations = [ { datatype = "Array"} ]